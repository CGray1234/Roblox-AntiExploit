local ServerScriptService = game:GetService("ServerScriptService")
local HttpService = game:GetService("HttpService")
local _Workspace_ = game:GetService("Workspace")
local Lighting = game:GetService("Lighting")
local Players = game:GetService("Players")

local manualBan = {}

local DataStoreService = game:GetService("DataStoreService")
local banDataStore = DataStoreService:GetDataStore("banDataStore")

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RemoteEvents = ReplicatedStorage:WaitForChild("RemoteEvents")

local BodyParts = {"Left Arm", "Right Arm", "Left Leg", "Right Leg", "Humanoid"}
local WhitelistedStates = {0, 3, 5, 7, 8, 10, 12, 15}

local admins = {} --Example: {1234567890, 0987654321}



game:GetService("Players").PlayerAdded:Connect(function(player)
	
	local plrUserId = player.UserId
	
	if manualBan[plrUserId] then
		player:Kick("Ban messsage here")
	end
	
	local banned
	local success, errormessage = pcall(function()
		banned = banDataStore:GetAsync(plrUserId)
	end)
	
	if banned == true then
		player:Kick("Ban message here")
	end
end)

function isInTable(tableValue, toFind)
	local found = false
	for _,v in pairs(tableValue) do
		if v==toFind then
			found = true
			break;
		end
	end
	return found
end

function Disconnect(Player)
	pcall(function()
		local success, errormessage = pcall(function()
			banDataStore:SetAsync(Player.UserId, true)
		end)
		RemoteEvents.ChatMessageEvent:FireAllClients("Ban message here. This will show in chat")
		Player:Kick("Ban message here")
	end)
end


RemoteEvents.ClientKick.OnServerEvent:Connect(function(Player, Message)
	pcall(function() Player:Kick("Player was exploiting") end)
end)


coroutine.resume(coroutine.create(function()
	while wait(math.random(10, 15)) do
		game:GetService("Workspace").Name = HttpService:GenerateGUID(true)
		game:GetService("Players").Name = HttpService:GenerateGUID(true)
		game:GetService("Lighting").Name = HttpService:GenerateGUID(true)
		game:GetService("ReplicatedFirst").Name = HttpService:GenerateGUID(true)
		game:GetService("ReplicatedStorage").Name = HttpService:GenerateGUID(true)
		game:GetService("ServerScriptService").Name = HttpService:GenerateGUID(true)
		game:GetService("ServerStorage").Name = HttpService:GenerateGUID(true)
		game:GetService("StarterGui").Name = HttpService:GenerateGUID(true)
		game:GetService("Chat").Name = HttpService:GenerateGUID(true)
	end
end))

--Prevents disco
Lighting:GetPropertyChangedSignal("Ambient"):Connect(function()
	Lighting.Ambient = Color3.fromRGB(138, 138, 138)
end)


Lighting:GetPropertyChangedSignal("OutdoorAmbient"):Connect(function()
	Lighting.OutdoorAmbient = Color3.fromRGB(70, 70, 70)
end)


Lighting:GetPropertyChangedSignal("Brightness"):Connect(function()
	Lighting.Brightness = 2
end)


ReplicatedStorage.ChildAdded:Connect(function(Child)
	if not Child:IsA("Folder") then
		pcall(function()
			Child:Destroy()
		end)
	end
end)


Players.PlayerAdded:Connect(function(Player)
	Player.CharacterAdded:Connect(function(Character)
		-- Anti Fly
		local Humanoid = Character:WaitForChild("Humanoid")
		local function CheckMagnitude()
			if not Character:FindFirstChild("HumanoidRootPart") then return end
			local PreviousPosition = Character.HumanoidRootPart.Position
			local PreviousState = Humanoid:GetState()
			
			delay(1, function()
				if (Character.HumanoidRootPart.Position - PreviousPosition).Magnitude >= 25 then
					wait(0.1)
					if table.find(WhitelistedStates, Humanoid:GetState().Value) or table.find(WhitelistedStates, PreviousState) then return end
					if Humanoid.FloorMaterial ~= Enum.Material.Air or Humanoid.Health == 0 then return end
					if Humanoid.Sit == true then
						return
					end
					if isInTable(admins, Player.UserId) then
						return
					end
					Disconnect(Player)
				end
			end)
		end
		
		local function CloneAntiExploit()
			pcall(function()
				local Descendants = Player:GetDescendants()
				for _, v in pairs(Character:GetDescendants()) do table.insert(Descendants, v) end
				table.remove(Descendants, (table.find(Descendants, Player.PlayerGui)))
				-- Stops it from cloning into PlayerGui, which (obviously) breaks it
				while true do
					local ClonedAntiExploit = script.ClientAntiExploit:Clone()
					ClonedAntiExploit.Name = HttpService:GenerateGUID(true)
					ClonedAntiExploit.Parent = Descendants[math.random(1, #Descendants)]
					ClonedAntiExploit.Disabled = false
					wait(5)
					ClonedAntiExploit:Destroy()
					print("Server and client anti-cheats are running successfully.")
				end
			end)	
		end
		
		-- Does neccessary checks on a different thread using coroutine
		coroutine.resume(coroutine.create(function()
			while wait(1) do
				CheckMagnitude()
			end
		end))
		
		coroutine.resume(coroutine.create(function()
			CloneAntiExploit()
			while wait(15) do
				CloneAntiExploit()
			end
		end))
		
		-- Checks for state changes in Humanoid
		Humanoid.StateChanged:Connect(function(PreviousState, NewState)
			if NewState == Enum.HumanoidStateType.PlatformStanding then
				if isInTable(admins, Player.UserId) then
					return
				end
				Disconnect(Player)
			end
		end)
		
		-- Checks for anything removed in character
		Character.ChildRemoved:Connect(function(Child)
			if table.find(BodyParts, Child.Name) then
				if isInTable(admins, Player.UserId) then
					return
				end
				Disconnect(Player)
			end
		end)
	end)
end)